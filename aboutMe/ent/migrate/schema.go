// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// HobbiesColumns holds the columns for the "hobbies" table.
	HobbiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Size: 2147483647},
	}
	// HobbiesTable holds the schema information for the "hobbies" table.
	HobbiesTable = &schema.Table{
		Name:       "hobbies",
		Columns:    HobbiesColumns,
		PrimaryKey: []*schema.Column{HobbiesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Size: 2147483647},
		{Name: "email", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserFriendsColumns holds the columns for the "user_friends" table.
	UserFriendsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "friend_id", Type: field.TypeInt},
	}
	// UserFriendsTable holds the schema information for the "user_friends" table.
	UserFriendsTable = &schema.Table{
		Name:       "user_friends",
		Columns:    UserFriendsColumns,
		PrimaryKey: []*schema.Column{UserFriendsColumns[0], UserFriendsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_friends_user_id",
				Columns:    []*schema.Column{UserFriendsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_friends_friend_id",
				Columns:    []*schema.Column{UserFriendsColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserHobbiesColumns holds the columns for the "user_hobbies" table.
	UserHobbiesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "hobby_id", Type: field.TypeInt},
	}
	// UserHobbiesTable holds the schema information for the "user_hobbies" table.
	UserHobbiesTable = &schema.Table{
		Name:       "user_hobbies",
		Columns:    UserHobbiesColumns,
		PrimaryKey: []*schema.Column{UserHobbiesColumns[0], UserHobbiesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_hobbies_user_id",
				Columns:    []*schema.Column{UserHobbiesColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_hobbies_hobby_id",
				Columns:    []*schema.Column{UserHobbiesColumns[1]},
				RefColumns: []*schema.Column{HobbiesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		HobbiesTable,
		UsersTable,
		UserFriendsTable,
		UserHobbiesTable,
	}
)

func init() {
	UserFriendsTable.ForeignKeys[0].RefTable = UsersTable
	UserFriendsTable.ForeignKeys[1].RefTable = UsersTable
	UserHobbiesTable.ForeignKeys[0].RefTable = UsersTable
	UserHobbiesTable.ForeignKeys[1].RefTable = HobbiesTable
}
